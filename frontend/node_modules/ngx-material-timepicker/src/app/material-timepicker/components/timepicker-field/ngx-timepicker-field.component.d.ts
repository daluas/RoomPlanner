import { OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NgxMaterialTimepickerService } from '../../services/ngx-material-timepicker.service';
import { Observable } from 'rxjs';
import { TimePeriod } from '../../models/time-period.enum';
import { TimeUnit } from '../../models/time-unit.enum';
import { NgxMaterialTimepickerTheme } from '../../models/ngx-material-timepicker-theme.interface';
export declare class NgxTimepickerFieldComponent implements OnInit, OnDestroy, ControlValueAccessor {
    private timepickerService;
    period$: Observable<TimePeriod>;
    hour: number;
    minute: number;
    minHour: number;
    maxHour: number;
    timeUnit: typeof TimeUnit;
    timepickerTime: string;
    disabled: boolean;
    toggleIcon: TemplateRef<HTMLObjectElement>;
    buttonAlign: 'right' | 'left';
    clockTheme: NgxMaterialTimepickerTheme;
    controlOnly: boolean;
    format: number;
    defaultTime: string;
    private _defaultTime;
    private _format;
    private hoursList;
    private minutesList;
    private unsubscribe$;
    private onChange;
    constructor(timepickerService: NgxMaterialTimepickerService);
    ngOnInit(): void;
    writeValue(val: string): void;
    registerOnTouched(fn: any): void;
    registerOnChange(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    changeHour(hour: number): void;
    changeMinute(minute: number): void;
    changePeriod(period: TimePeriod): void;
    onTimeSet(time: string): void;
    ngOnDestroy(): void;
    private changeTime;
    private formatTime;
}
