{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-period.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-format.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/utils/timepicker.utils.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/time-adapter.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-unit.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker-event.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-toggle-icon.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-toggle-button/ngx-material-timepicker-toggle.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-timepicker.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-theme.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/utils/timepicker-time.utils.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-face/ngx-material-timepicker-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial/ngx-material-timepicker-dial.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/time-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial-control/ngx-material-timepicker-dial-control.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-period/ngx-material-timepicker-period.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/style-sanitizer.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/overlay.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/minutes-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/autofocus.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/ngx-timepicker-field.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/timepicker-time-control/ngx-timepicker-time-control.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/timepicker-period-selector/ngx-timepicker-period-selector.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","TimePeriod","TimeFormat","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isSameOrAfter","time","compareWith","unit","hour","hasSame","valueOf","isSameOrBefore","isDigit","e","some","keyCode","ctrlKey","metaKey","TimeUnit","TimeAdapter","parseTime","format","indexOf","period","trim","substr","toUpperCase","isPeriodValid","AM","PM","_a","o","m","Symbol","iterator","ar","next","done","push","value","error","__read","split","h","formatHour","parseInt","isPM","hours","formatTime","timeFormat","TWENTY_FOUR","TWELVE","timeMask","TWENTY_FOUR_SHORT","TWELVE_SHORT","DateTime","fromFormat","toFormat","toLowerCase","convertTimeToDateTime","isTimeAvailable","min","max","granularity","minutesGap","convertedTime","minutes","minute","Error","isAfter","isBefore","between","before","after","isBetween","currentHour","DEFAULT_HOUR","angle","DEFAULT_MINUTE","NgxMaterialTimepickerService","hourSubject","BehaviorSubject","minuteSubject","periodSubject","asObservable","setDefaultTimeIfAvailable","setDefaultTime","console","getFullTime","getValue","defaultTime","toJSDate","fromJSDate","isValid","getHours","formatHourByPeriod","getMinutes","resetTime","Injectable","providedIn","AnimationState","NgxMaterialTimepickerEventService","backdropClickSubject","Subject","keydownEventSubject","dispatchEvent","event","type","ESCAPE","NgxMaterialTimepickerComponent","timepickerService","eventService","_this","timeUnit","activeTimeUnit","HOUR","isOpened","isEsc","timeSet","EventEmitter","opened","closed","hourSelected","subscriptions","merge","backdropClick","keydownEvent","pipe","filter","subscribe","close","timepickerInput","_format","_minutesGap","gap","Math","floor","disabled","ngOnInit","selectedHour","selectedMinute","selectedPeriod","registerInput","input","onHourChange","onHourSelected","changeTimeUnit","MINUTE","onMinuteChange","changePeriod","setTime","minTime","maxTime","open","disableAnimation","animationState","ENTER","closeTimepicker","LEAVE","animationDone","phaseName","toState","onKeydown","stopPropagation","ngOnDestroy","forEach","subscription","unsubscribe","tslib_1.__decorate","Input","TemplateRef","Output","HostListener","KeyboardEvent","Component","selector","template","animations","trigger","transition","style","transform","animate","opacity","providers","NgxMaterialTimepickerToggleIconDirective","Directive","NgxMaterialTimepickerToggleComponent","_disabled","undefined","timepicker","ContentChild","static","VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","TimepickerDirective","multi","elementRef","_value","timepickerSubscriptions","onTouched","onChange","_min","_max","picker","registerTimepicker","updateInputValue","_timepicker","warn","onInput","ngOnChanges","changes","currentValue","onClick","disableClick","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","nativeElement","host","[disabled]","(input)","(blur)","ElementRef","NgxMaterialTimepickerThemeDirective","element","ngAfterViewInit","theme","setTheme","val","prop","setProperty","replace","fill","map","v","disableHours","config","currentTime","fromObject","disableMinutes","hour_1","NgxMaterialTimepickerHoursFace","hourChange","hoursList","onTimeSelected","NgxMaterialTimepicker24HoursFaceComponent","_super","tslib_1.__extends","ngAfterContentInit","NgxMaterialTimepicker12HoursFaceComponent","NgxMaterialTimepickerMinutesFaceComponent","minutesList","minuteChange","CLOCK_HAND_STYLES","height","top","NgxMaterialTimepickerFaceComponent","innerClockFaceSize","timeChange","timeSelected","setClockHandPosition","addTouchEvents","faceTimeChanges","selectedTimeChanges","selectedTime","faceTime","find","setTimeout","selectAvailableTime","trackByTime","_","onMousedown","preventDefault","isStarted","selectTime","MouseEvent","x0","y0","x","y","currentAngle","clockFaceCords","clockFace","getBoundingClientRect","centerX","left","width","centerY","arctangent","atan","abs","clientX","clientY","PI","circleAngle","isInnerClockChosen","isInnerClockFace","angleStep","roundedAngle","roundAngle","onMouseup","isHourSelected","isClockFaceDisabled","isMinuteSelected","removeTouchEvents","touchStartHandler","bind","touchEndHandler","addEventListener","removeEventListener","decreaseClockHand","increaseClockHand","clockHand","every","availableTime","sqrt","pow","ViewChild","changeDetection","ChangeDetectionStrategy","OnPush","step","round","NgxMaterialTimepickerButtonComponent","NgxMaterialTimepickerDialComponent","periodChanged","timeUnitChanged","hourChanged","minuteChanged","changeHour","changeMinute","showHint","isHintVisible","hideHint","TimeFormatterPipe","Pipe","name","NgxMaterialTimepickerDialControlComponent","timeChanged","focused","unfocused","timeList","isEditable","firstChange","saveTimeAndChangeTimeUnit","previousTime","updateTime","onKeyDown","char","String","fromCharCode","nextTime","test","isTimeUnavailable","isTimeDisabledToChange","changeTimeByArrow","NgxMaterialTimepickerPeriodComponent","timePeriod","isPeriodAvailable","isSwitchPeriodAvailable","getDisabledTimeByPeriod","sequence","StyleSanitizerPipe","domSanitizer","bypassSecurityTrustStyle","DomSanitizer","OverlayDirective","preventClick","MinutesFormatterPipe","AutofocusDirective","document","activeElement","isFocusActive","focus","tslib_1.__param","Optional","Inject","DOCUMENT","NgxTimepickerFieldComponent","minHour","maxHour","buttonAlign","unsubscribe$","_defaultTime","timepickerTime","period$","takeUntil","changeTime","onTimeSet","NgxTimepickerFieldComponent_1","NgxTimepickerTimeControlComponent","increase","decrease","emit","isNaN","onFocus","isFocused","onBlur","NgxTimepickerPeriodSelectorComponent","periodSelected","select","NgxMaterialTimepickerModule","NgModule","imports","CommonModule","FormsModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TimePeriod {\n    AM = 'AM',\n    PM = 'PM'\n}\n","export enum TimeFormat {\n    TWELVE = 'hh:mm a',\n    TWELVE_SHORT = 'h:m a',\n    TWENTY_FOUR = 'HH:mm',\n    TWENTY_FOUR_SHORT = 'H:m'\n}\n","/* tslint:disable */\nimport { DateTime } from 'luxon';\n\n\nexport function isSameOrAfter(time: DateTime, compareWith: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return time.hour >= compareWith.hour;\n    }\n    if (unit === 'minutes') {\n        return time.hasSame(compareWith, unit) || time.valueOf() > compareWith.valueOf();\n    }\n}\n\nexport function isSameOrBefore(time: DateTime, compareWith: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return time.hour <= compareWith.hour;\n    }\n    if (unit === 'minutes') {\n        return time.hasSame(compareWith, unit) || time.valueOf() <= compareWith.valueOf();\n    }\n}\n\nexport function isBetween(time: DateTime, before: DateTime, after: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return isSameOrBefore(time, after, unit) && isSameOrAfter(time, before, unit);\n    }\n    if (unit === 'minutes') {\n        return isSameOrBefore(time, after) && isSameOrAfter(time, before);\n    }\n}\n\nexport function isDigit(e: KeyboardEvent) {\n    // Allow: backspace, delete, tab, escape, enter\n    if ([46, 8, 9, 27, 13].some(n => n === e.keyCode) ||\n        // Allow: Ctrl/cmd+A\n        (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+C\n        (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+X\n        (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: home, end, left, right, up, down\n        (e.keyCode >= 35 && e.keyCode <= 40)) {\n\n        return true;\n    }\n    return !((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105));\n}\n","import { DateTime } from 'luxon';\n\nimport { TimeFormat } from '../models/time-format.enum';\nimport { TimePeriod } from '../models/time-period.enum';\nimport { isBetween, isSameOrAfter, isSameOrBefore } from '../utils/timepicker.utils';\n\n// @dynamic\nexport class TimeAdapter {\n\n    static parseTime(time: string, format = 12): string {\n        if (time.indexOf(':') === -1) {\n            return 'Invalid time';\n        }\n        let period = time.trim().substr(time.length - 2).toUpperCase();\n\n        const isPeriodValid = period === TimePeriod.AM || period === TimePeriod.PM;\n        const [h, m] = time.split(':');\n\n\n        if (format === 24) {\n            const formattedHours = isPeriodValid ? this.formatHour(+h, 12, period as TimePeriod) : +h;\n            return `${formattedHours}:${parseInt(m, 10)}`;\n        }\n\n        const isPM = +h > 12;\n        const hours = isPM ? +h - 12 : +h;\n\n        period = isPeriodValid ? period : isPM ? TimePeriod.PM : TimePeriod.AM;\n\n        return `${hours}:${parseInt(m, 10)} ${period}`;\n    }\n\n    static formatTime(time: string, format = 12): string {\n        const timeFormat = (format === 24) ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\n        const timeMask = (format === 24) ? TimeFormat.TWENTY_FOUR_SHORT : TimeFormat.TWELVE_SHORT;\n\n        return DateTime.fromFormat(this.parseTime(time, format), timeMask).toFormat(timeFormat).toLowerCase();\n    }\n\n    static convertTimeToDateTime(time: string, format = 12): DateTime {\n        const timeMask = (format === 24) ? TimeFormat.TWENTY_FOUR_SHORT : TimeFormat.TWELVE_SHORT;\n        return DateTime.fromFormat(this.parseTime(time, format), timeMask);\n    }\n\n    static isTimeAvailable(\n        time: string,\n        min?: DateTime,\n        max?: DateTime,\n        granularity?: 'hours' | 'minutes',\n        minutesGap?: number,\n        format?: number\n    ): boolean {\n\n        if (!time) {\n            return;\n        }\n\n        const convertedTime = this.convertTimeToDateTime(time, format);\n        const minutes = convertedTime.minute;\n\n        if (minutesGap && (minutes % minutesGap !== 0)) {\n            throw new Error(`Your minutes - ${minutes} doesn\\'t match your minutesGap - ${minutesGap}`);\n        }\n        const isAfter = (min && !max)\n            && isSameOrAfter(convertedTime, min, granularity);\n        const isBefore = (max && !min)\n            && isSameOrBefore(convertedTime, max, granularity);\n        const between = (min && max)\n            && isBetween(convertedTime, min, max, granularity);\n        const isAvailable = !min && !max;\n\n        return isAfter || isBefore || between || isAvailable;\n    }\n\n    /***\n     *  Format hour according to time format (12 or 24)\n     */\n    static formatHour(currentHour: number, format: number, period: TimePeriod): number {\n        if (format === 24) {\n            return currentHour;\n        }\n        const hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\n\n        if (period === TimePeriod.AM && hour === 12) {\n            return 0;\n        } else if (period === TimePeriod.PM && hour === 24) {\n            return 12;\n        }\n        return hour;\n    }\n}\n","export enum TimeUnit {\n    HOUR,\n    MINUTE\n}\n","import { Injectable } from '@angular/core';\nimport { ClockFaceTime } from '../models/clock-face-time.interface';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TimePeriod } from '../models/time-period.enum';\nimport { TimeAdapter } from './time-adapter';\nimport { DateTime } from 'luxon';\n\n\nconst DEFAULT_HOUR: ClockFaceTime = {\n    time: 12,\n    angle: 360\n};\nconst DEFAULT_MINUTE: ClockFaceTime = {\n    time: 0,\n    angle: 360\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxMaterialTimepickerService {\n\n    private hourSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_HOUR);\n    private minuteSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_MINUTE);\n    private periodSubject = new BehaviorSubject<TimePeriod>(TimePeriod.AM);\n\n\n    set hour(hour: ClockFaceTime) {\n        this.hourSubject.next(hour);\n    }\n\n    get selectedHour(): Observable<ClockFaceTime> {\n        return this.hourSubject.asObservable();\n    }\n\n    set minute(minute: ClockFaceTime) {\n        this.minuteSubject.next(minute);\n    }\n\n    get selectedMinute(): Observable<ClockFaceTime> {\n        return this.minuteSubject.asObservable();\n    }\n\n    set period(period: TimePeriod) {\n        const isPeriodValid = (period === TimePeriod.AM) || (period === TimePeriod.PM);\n\n        if (isPeriodValid) {\n            this.periodSubject.next(period);\n        }\n    }\n\n    get selectedPeriod(): Observable<TimePeriod> {\n        return this.periodSubject.asObservable();\n    }\n\n\n    setDefaultTimeIfAvailable(time: string, min: DateTime, max: DateTime, format: number, minutesGap?: number) {\n        /* Workaround to double error message*/\n        try {\n            if (TimeAdapter.isTimeAvailable(time, min, max, 'minutes', minutesGap)) {\n                this.setDefaultTime(TimeAdapter.formatTime(time, format), format);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    getFullTime(format: number): string {\n        const hour = this.hourSubject.getValue().time;\n        const minute = this.minuteSubject.getValue().time;\n        const period = format === 12 ? this.periodSubject.getValue() : '';\n\n        return TimeAdapter.formatTime(`${hour}:${minute} ${period}`, format);\n    }\n\n    private setDefaultTime(time: string, format: number) {\n        const defaultTime = TimeAdapter.convertTimeToDateTime(time, format).toJSDate();\n\n        if (DateTime.fromJSDate(defaultTime).isValid) {\n            const period = time.substr(time.length - 2).toUpperCase();\n            const hour = defaultTime.getHours();\n\n            this.hour = {...DEFAULT_HOUR, time: formatHourByPeriod(hour, period as TimePeriod)};\n            this.minute = {...DEFAULT_MINUTE, time: defaultTime.getMinutes()};\n            this.period = period as TimePeriod;\n\n        } else {\n            this.resetTime();\n        }\n    }\n\n    private resetTime(): void {\n        this.hour = {...DEFAULT_HOUR};\n        this.minute = {...DEFAULT_MINUTE};\n        this.period = TimePeriod.AM;\n    }\n}\n\n/***\n *  Format hour in 24hours format to meridian (AM or PM) format\n */\nfunction formatHourByPeriod(hour: number, period: TimePeriod): number {\n    switch (period) {\n        case TimePeriod.AM:\n            return hour === 0 ? 12 : hour;\n        case TimePeriod.PM:\n            return hour === 12 ? 12 : hour - 12;\n        default:\n            return hour;\n    }\n}\n","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ClockFaceTime } from './models/clock-face-time.interface';\nimport { TimePeriod } from './models/time-period.enum';\nimport { merge, Subscription } from 'rxjs';\nimport { NgxMaterialTimepickerService } from './services/ngx-material-timepicker.service';\nimport { TimeUnit } from './models/time-unit.enum';\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport { NgxMaterialTimepickerEventService } from './services/ngx-material-timepicker-event.service';\nimport { filter } from 'rxjs/operators';\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\nimport { DateTime } from 'luxon';\n\nexport enum AnimationState {\n    ENTER = 'enter',\n    LEAVE = 'leave'\n}\n\n\nconst ESCAPE = 27;\n\n@Component({\n    selector: 'ngx-material-timepicker',\n    templateUrl: './ngx-material-timepicker.component.html',\n    styleUrls: ['./ngx-material-timepicker.component.scss'],\n    animations: [\n        trigger('timepicker', [\n            transition(`* => ${AnimationState.ENTER}`, [\n                style({transform: 'translateY(-30%)'}),\n                animate('0.2s ease-out', style({transform: 'translateY(0)'}))\n            ]),\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\n                style({transform: 'translateY(0)', opacity: 1}),\n                animate('0.2s ease-out', style({transform: 'translateY(-30%)', opacity: 0}))\n            ])\n        ])\n    ],\n    providers: [NgxMaterialTimepickerService]\n})\nexport class NgxMaterialTimepickerComponent implements OnInit, OnDestroy {\n\n    selectedHour: ClockFaceTime;\n    selectedMinute: ClockFaceTime;\n    selectedPeriod: TimePeriod;\n\n    timeUnit = TimeUnit;\n    activeTimeUnit = TimeUnit.HOUR;\n\n    isOpened = false;\n    animationState: AnimationState;\n\n\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\n    @Input() editableHintTmpl: TemplateRef<Node>;\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\n    @Input('ESC') isEsc = true;\n    @Input() enableKeyboardInput: boolean;\n    @Input() preventOverlayClick: boolean;\n    @Input() disableAnimation: boolean;\n\n    @Input()\n    set format(value: number) {\n        this._format = value === 24 ? 24 : 12;\n    }\n\n    get format(): number {\n        return this.timepickerInput ? this.timepickerInput.format : this._format;\n    }\n\n    @Input()\n    set minutesGap(gap: number) {\n        if (gap == null) {\n            return;\n        }\n        gap = Math.floor(gap);\n        this._minutesGap = gap <= 59 ? gap : 1;\n    }\n\n    get minutesGap(): number {\n        return this._minutesGap;\n    }\n\n    @Input()\n    set defaultTime(time: string) {\n        this.setDefaultTime(time);\n    }\n\n    @Output() timeSet = new EventEmitter<string>();\n    @Output() opened = new EventEmitter<null>();\n    @Output() closed = new EventEmitter<null>();\n    @Output() hourSelected = new EventEmitter<number>();\n\n    private _minutesGap: number;\n    private _format: number;\n    private timepickerInput: TimepickerDirective;\n    private subscriptions: Subscription[] = [];\n\n    constructor(private timepickerService: NgxMaterialTimepickerService,\n                private eventService: NgxMaterialTimepickerEventService) {\n\n        this.subscriptions.push(merge(this.eventService.backdropClick,\n            this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc)))\n            .subscribe(() => this.close()));\n\n    }\n\n    get minTime(): string | DateTime {\n        return this.timepickerInput && this.timepickerInput.min;\n    }\n\n    get maxTime(): string | DateTime {\n        return this.timepickerInput && this.timepickerInput.max;\n    }\n\n    get disabled(): boolean {\n        return this.timepickerInput && this.timepickerInput.disabled;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(this.timepickerService.selectedHour\n            .subscribe(hour => this.selectedHour = hour));\n\n        this.subscriptions.push(this.timepickerService.selectedMinute\n            .subscribe(minute => this.selectedMinute = minute));\n\n        this.subscriptions.push(this.timepickerService.selectedPeriod\n            .subscribe(period => this.selectedPeriod = period));\n    }\n\n    /***\n     * Register an input with this timepicker.\n     * input - The timepicker input to register with this timepicker\n     */\n    registerInput(input: TimepickerDirective): void {\n        if (this.timepickerInput) {\n            throw Error('A Timepicker can only be associated with a single input.');\n        }\n        this.timepickerInput = input;\n    }\n\n    onHourChange(hour: ClockFaceTime): void {\n        this.timepickerService.hour = hour;\n    }\n\n    onHourSelected(hour: number): void {\n        this.changeTimeUnit(TimeUnit.MINUTE);\n        this.hourSelected.next(hour);\n    }\n\n    onMinuteChange(minute: ClockFaceTime): void {\n        this.timepickerService.minute = minute;\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.timepickerService.period = period;\n    }\n\n    changeTimeUnit(unit: TimeUnit): void {\n        this.activeTimeUnit = unit;\n    }\n\n    setTime(): void {\n        this.timeSet.next(this.timepickerService.getFullTime(this.format));\n        this.close();\n    }\n\n    setDefaultTime(time: string): void {\n        this.timepickerService.setDefaultTimeIfAvailable(\n            time, this.minTime as DateTime, this.maxTime as DateTime, this.format, this.minutesGap);\n    }\n\n    open(): void {\n        this.isOpened = true;\n        if (!this.disableAnimation) {\n            this.animationState = AnimationState.ENTER;\n        }\n        this.opened.next();\n    }\n\n    close(): void {\n        if (this.disableAnimation) {\n            this.closeTimepicker();\n            return;\n        }\n        this.animationState = AnimationState.LEAVE;\n    }\n\n    animationDone(event: AnimationEvent): void {\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\n            this.closeTimepicker();\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    onKeydown(e: KeyboardEvent) {\n        this.eventService.dispatchEvent(e);\n        e.stopPropagation();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    private closeTimepicker(): void {\n        this.isOpened = false;\n        this.activeTimeUnit = TimeUnit.HOUR;\n        this.closed.next();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxMaterialTimepickerEventService {\n\n    private backdropClickSubject: Subject<MouseEvent> = new Subject();\n    private keydownEventSubject: Subject<KeyboardEvent> = new Subject();\n\n    get backdropClick(): Observable<MouseEvent> {\n        return this.backdropClickSubject.asObservable();\n    }\n\n    get keydownEvent(): Observable<KeyboardEvent> {\n        return this.keydownEventSubject.asObservable();\n    }\n\n    dispatchEvent(event: KeyboardEvent | MouseEvent): void {\n        switch (event.type) {\n            case 'click':\n                this.backdropClickSubject.next(<MouseEvent>event);\n                break;\n            case 'keydown':\n                this.keydownEventSubject.next(<KeyboardEvent>event);\n                break;\n            default:\n                throw new Error('no such event type');\n        }\n    }\n\n}\n","import {Directive} from '@angular/core';\n\n/* To override a default toggle icon */\n@Directive({selector: '[ngxMaterialTimepickerToggleIcon]'})\n\nexport class NgxMaterialTimepickerToggleIconDirective {\n}\n","import {Component, ContentChild, Input} from '@angular/core';\nimport {NgxMaterialTimepickerToggleIconDirective} from '../../directives/ngx-material-timepicker-toggle-icon.directive';\nimport {NgxMaterialTimepickerComponent} from '../../ngx-material-timepicker.component';\n\n@Component({\n    selector: 'ngx-material-timepicker-toggle',\n    templateUrl: 'ngx-material-timepicker-toggle.component.html',\n    styleUrls: ['ngx-material-timepicker-toggle.component.scss']\n})\n\nexport class NgxMaterialTimepickerToggleComponent {\n\n    @Input('for') timepicker: NgxMaterialTimepickerComponent;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = value;\n    }\n\n    private _disabled: boolean;\n\n    @ContentChild(NgxMaterialTimepickerToggleIconDirective, { static: true }) customIcon: NgxMaterialTimepickerToggleIconDirective;\n\n    open(event): void {\n        if (this.timepicker) {\n            this.timepicker.open();\n            event.stopPropagation();\n        }\n    }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { NgxMaterialTimepickerComponent } from '../ngx-material-timepicker.component';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { TimeAdapter } from '../services/time-adapter';\nimport { DateTime } from 'luxon';\n\nconst VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => TimepickerDirective),\n    multi: true\n};\n\n@Directive({\n    selector: '[ngxTimepicker]',\n    providers: [VALUE_ACCESSOR],\n    host: {\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(blur)': 'onTouched()',\n    },\n})\nexport class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {\n\n    @Input()\n    set format(value: number) {\n        this._format = value === 24 ? 24 : 12;\n    }\n\n    get format(): number {\n        return this._format;\n    }\n\n    private _format = 12;\n\n    @Input()\n    set min(value: string | DateTime) {\n        if (typeof value === 'string') {\n            this._min = TimeAdapter.convertTimeToDateTime(value, this._format);\n            return;\n        }\n        this._min = value;\n    }\n\n    get min(): string | DateTime {\n        return this._min;\n    }\n\n    private _min: string | DateTime;\n\n    @Input()\n    set max(value: string | DateTime) {\n        if (typeof value === 'string') {\n            this._max = TimeAdapter.convertTimeToDateTime(value, this._format);\n            return;\n        }\n        this._max = value;\n    }\n\n    get max(): string | DateTime {\n        return this._max;\n    }\n\n    private _max: string | DateTime;\n\n    @Input('ngxTimepicker')\n    set timepicker(picker: NgxMaterialTimepickerComponent) {\n        this.registerTimepicker(picker);\n    }\n\n    private _timepicker: NgxMaterialTimepickerComponent;\n\n    @Input()\n    set value(value: string) {\n        if (!value) {\n            this._value = '';\n            this.updateInputValue();\n            return;\n        }\n        const time = TimeAdapter.formatTime(value, this._format);\n        const isAvailable = TimeAdapter.isTimeAvailable(\n            time,\n            <DateTime>this._min,\n            <DateTime>this._max,\n            'minutes',\n            this._timepicker.minutesGap,\n            this._format\n        );\n\n        if (isAvailable) {\n            this._value = time;\n            this.updateInputValue();\n            return;\n        }\n        console.warn('Selected time doesn\\'t match min or max value');\n    }\n\n    get value(): string {\n        return this._value;\n    }\n\n    private _value = '';\n\n    @Input() disabled: boolean;\n    @Input() disableClick: boolean;\n\n    private timepickerSubscriptions: Subscription[] = [];\n\n    onTouched = () => {\n    }\n\n    private onChange: (value: any) => void = () => {\n    }\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    private set defaultTime(time: string) {\n        this._timepicker.setDefaultTime(time);\n    }\n\n    onInput(value: string) {\n        this.value = value;\n        this.onChange(value);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['value'] && changes['value'].currentValue) {\n            this.defaultTime = changes['value'].currentValue;\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event) {\n        if (!this.disableClick) {\n            this._timepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    writeValue(value: string): void {\n        this.value = value;\n        this.defaultTime = value;\n    }\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    ngOnDestroy() {\n        this.timepickerSubscriptions.forEach(s => s.unsubscribe());\n    }\n\n    private registerTimepicker(picker: NgxMaterialTimepickerComponent): void {\n        if (picker) {\n            this._timepicker = picker;\n            this._timepicker.registerInput(this);\n            this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe((time: string) => {\n                this.value = time;\n                this.onChange(this._value);\n                this.onTouched();\n            }));\n            this.timepickerSubscriptions.push(\n                this._timepicker.closed.subscribe(() => this.defaultTime = this._value));\n        } else {\n            throw new Error('NgxMaterialTimepickerComponent is not defined.' +\n                ' Please make sure you passed the timepicker to ngxTimepicker directive');\n        }\n    }\n\n    private updateInputValue(): void {\n        this.elementRef.nativeElement.value = this.value;\n    }\n\n}\n\n","import {AfterViewInit, Directive, ElementRef, Input} from '@angular/core';\nimport {NgxMaterialTimepickerTheme} from '../models/ngx-material-timepicker-theme.interface';\n\n@Directive({selector: '[ngxMaterialTimepickerTheme]'})\nexport class NgxMaterialTimepickerThemeDirective implements AfterViewInit {\n\n    @Input('ngxMaterialTimepickerTheme') theme: NgxMaterialTimepickerTheme;\n\n    private element: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        this.element = elementRef.nativeElement;\n    }\n\n    ngAfterViewInit() {\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n    }\n\n    private setTheme(theme): void {\n        for (const val in theme) {\n            if (theme.hasOwnProperty(val)) {\n                if (typeof theme[val] === 'string') {\n                    for (const prop in theme) {\n                        if (theme.hasOwnProperty(prop)) {\n                            this.element.style.setProperty(`--${camelCaseToDash(prop)}`, theme[prop]);\n                        }\n                    }\n                    return;\n                }\n                this.setTheme(theme[val]);\n            }\n\n        }\n    }\n}\n\nfunction camelCaseToDash(myStr) {\n    return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n","import { ClockFaceTime } from '../models/clock-face-time.interface';\nimport { TimeAdapter } from '../services/time-adapter';\nimport { TimeFormat } from '../models/time-format.enum';\nimport { DisabledTimeConfig } from '../models/disabled-time-config.interface';\nimport { DateTime } from 'luxon';\n\n\nexport function getHours(format: number): ClockFaceTime[] {\n    return Array(format).fill(1).map((v, i) => {\n        const angleStep = 30;\n        const time = v + i;\n        const angle = angleStep * time;\n        return {time: time === 24 ? 0 : time, angle};\n    });\n}\n\nexport function disableHours(hours: ClockFaceTime[], config: DisabledTimeConfig): ClockFaceTime[] {\n    if (config.min || config.max) {\n\n        return hours.map(value => {\n            const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(value.time, config.format, config.period);\n            const currentTime = DateTime.fromObject({hour}).toFormat(TimeFormat.TWELVE);\n\n            return {\n                ...value,\n                disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\n            };\n        });\n    }\n    return hours;\n}\n\nexport function getMinutes(gap = 1): ClockFaceTime[] {\n    const minutesCount = 60;\n    const angleStep = 360 / minutesCount;\n    const minutes = [];\n\n    for (let i = 0; i < minutesCount; i++) {\n        const angle = angleStep * i;\n        if (i % gap === 0) {\n            minutes.push({time: i, angle: angle !== 0 ? angle : 360});\n        }\n    }\n    return minutes;\n}\n\nexport function disableMinutes(minutes: ClockFaceTime[], selectedHour: number, config: DisabledTimeConfig) {\n    if (config.min || config.max) {\n\n        const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\n\n        return minutes.map(value => {\n            const currentTime = DateTime.fromObject({hour, minute: value.time}).toFormat(TimeFormat.TWELVE);\n\n            return {\n                ...value,\n                disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\n            };\n        });\n    }\n    return minutes;\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { getHours } from '../../utils/timepicker-time.utils';\n\n\nexport class NgxMaterialTimepickerHoursFace {\n\n    @Input() selectedHour: ClockFaceTime;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() format: number;\n\n    @Output() hourChange = new EventEmitter<ClockFaceTime>();\n    @Output() hourSelected = new EventEmitter<number>();\n\n    hoursList: ClockFaceTime[] = [];\n\n    protected constructor(format: number) {\n        this.hoursList = getHours(format);\n    }\n\n    onTimeSelected(time: number): void {\n        this.hourSelected.next(time);\n    }\n}\n","import {AfterContentInit, Component} from '@angular/core';\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport { disableHours } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-24-hours-face',\n    templateUrl: 'ngx-material-timepicker-24-hours-face.component.html'\n})\n\nexport class NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements AfterContentInit {\n\n    constructor() {\n        super(24);\n    }\n\n    ngAfterContentInit() {\n        this.hoursList = disableHours(this.hoursList, {\n            min: this.minTime,\n            max: this.maxTime,\n            format: this.format\n        });\n    }\n}\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport {TimePeriod} from '../../models/time-period.enum';\nimport { disableHours } from '../../utils/timepicker-time.utils';\n\n\n@Component({\n    selector: 'ngx-material-timepicker-12-hours-face',\n    templateUrl: 'ngx-material-timepicker-12-hours-face.component.html'\n})\n\nexport class NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements OnChanges {\n\n    @Input() period: TimePeriod;\n\n    constructor() {\n        super(12);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue) {\n            this.hoursList = disableHours(this.hoursList, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { DateTime } from 'luxon';\nimport { disableMinutes, getMinutes } from '../../utils/timepicker-time.utils';\n\n\n@Component({\n    selector: 'ngx-material-timepicker-minutes-face',\n    templateUrl: './ngx-material-timepicker-minutes-face.component.html'\n})\nexport class NgxMaterialTimepickerMinutesFaceComponent implements OnChanges {\n\n    minutesList: ClockFaceTime[] = [];\n    timeUnit = TimeUnit;\n\n    @Input() selectedMinute: ClockFaceTime;\n    @Input() selectedHour: number;\n    @Input() period: TimePeriod;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() format: number;\n    @Input() minutesGap: number;\n\n    @Output() minuteChange = new EventEmitter<ClockFaceTime>();\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue) {\n            const minutes = getMinutes(this.minutesGap);\n            this.minutesList = disableMinutes(minutes, this.selectedHour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\n\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\n\nconst CLOCK_HAND_STYLES = {\n    small: {\n        height: '75px',\n        top: 'calc(50% - 75px)'\n    },\n    large: {\n        height: '103px',\n        top: 'calc(50% - 103px)'\n    }\n};\n\n@Component({\n    selector: 'ngx-material-timepicker-face',\n    templateUrl: './ngx-material-timepicker-face.component.html',\n    styleUrls: ['./ngx-material-timepicker-face.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n    timeUnit = TimeUnit;\n\n    isClockFaceDisabled: boolean;\n    innerClockFaceSize = 85;\n\n    @Input() faceTime: ClockFaceTime[];\n    @Input() selectedTime: ClockFaceTime;\n    @Input() unit: TimeUnit;\n    @Input() format: number;\n    @Input() minutesGap: number;\n\n    @Output() timeChange = new EventEmitter<ClockFaceTime>();\n    @Output() timeSelected = new EventEmitter<number>();\n\n    @ViewChild('clockFace', { static: true }) clockFace: ElementRef;\n    @ViewChild('clockHand', { static: true }) clockHand: ElementRef;\n\n    private isStarted: boolean;\n    private touchStartHandler: () => any;\n    private touchEndHandler: () => any;\n\n    ngAfterViewInit() {\n        this.setClockHandPosition();\n        this.addTouchEvents();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const faceTimeChanges = changes['faceTime'];\n        const selectedTimeChanges = changes['selectedTime'];\n\n        if ((faceTimeChanges && faceTimeChanges.currentValue)\n            && (selectedTimeChanges && selectedTimeChanges.currentValue)) {\n            /* Set time according to passed an input value */\n            this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\n        }\n        if (selectedTimeChanges && selectedTimeChanges.currentValue) {\n            this.setClockHandPosition();\n        }\n        if (faceTimeChanges && faceTimeChanges.currentValue) {\n            // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\n            setTimeout(() => this.selectAvailableTime());\n        }\n    }\n\n\n    trackByTime(_, time: ClockFaceTime): string | number {\n        return time.time;\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMousedown(e: MouseEvent | TouchEvent) {\n        e.preventDefault();\n        this.isStarted = true;\n    }\n\n    @HostListener('click', ['$event'])\n    @HostListener('touchmove', ['$event.changedTouches[0]'])\n    @HostListener('touchend', ['$event.changedTouches[0]'])\n    @HostListener('mousemove', ['$event'])\n    selectTime(e: MouseEvent | Touch): void {\n\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\n            return;\n        }\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\n\n        /* Get x0 and y0 of the circle */\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\n        /* Counting the arctangent and convert it to from radian to deg */\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\n        /* Get angle according to quadrant */\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\n        /* Check if selected time from the inner clock face (24 hours format only) */\n        const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\n        /* Round angle according to angle step */\n        const angleStep = this.unit === TimeUnit.MINUTE ? (6 * (this.minutesGap || 1)) : 30;\n        const roundedAngle = isInnerClockChosen\n            ? roundAngle(circleAngle, angleStep) + 360\n            : roundAngle(circleAngle, angleStep);\n        const angle = roundedAngle === 0 ? 360 : roundedAngle;\n\n        const selectedTime = this.faceTime.find(val => val.angle === angle);\n\n        if (selectedTime && !selectedTime.disabled) {\n            this.timeChange.next(selectedTime);\n\n            /* To let know whether user ended interaction with clock face */\n            if (!this.isStarted) {\n                this.timeSelected.next(selectedTime.time);\n            }\n        }\n\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onMouseup(e: MouseEvent | TouchEvent) {\n        e.preventDefault();\n        this.isStarted = false;\n    }\n\n    isHourSelected(hour: number): boolean {\n        return (hour === this.selectedTime.time) && !this.isClockFaceDisabled;\n    }\n\n    isMinuteSelected(minute: number): boolean {\n        return ((this.selectedTime.time === minute) && (minute % (this.minutesGap || 5) === 0)) && !this.isClockFaceDisabled;\n    }\n\n    ngOnDestroy() {\n        this.removeTouchEvents();\n    }\n\n    private addTouchEvents(): void {\n        this.touchStartHandler = this.onMousedown.bind(this);\n        this.touchEndHandler = this.onMouseup.bind(this);\n\n        this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\n    }\n\n    private removeTouchEvents(): void {\n        this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\n    }\n\n    private setClockHandPosition(): void {\n        if (this.format === 24) {\n            if (this.selectedTime.time > 12 || this.selectedTime.time === 0) {\n                this.decreaseClockHand();\n            } else {\n                this.increaseClockHand();\n            }\n        }\n\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\n    }\n\n    private selectAvailableTime(): void {\n        const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\n        this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\n\n        if ((currentTime && currentTime.disabled) && !this.isClockFaceDisabled) {\n            const availableTime = this.faceTime.find(time => !time.disabled);\n\n            this.timeChange.next(availableTime);\n        }\n    }\n\n    private isInnerClockFace(x0: number, y0: number, x: number, y: number): boolean {\n        /* Detect whether time from the inner clock face or not (24 format only) */\n        return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\n    }\n\n    private decreaseClockHand(): void {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\n    }\n\n    private increaseClockHand(): void {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\n    }\n}\n\nfunction roundAngle(angle: number, step: number): number {\n    return Math.round(angle / step) * step;\n}\n\nfunction countAngleByCords(x0: number, y0: number, x: number, y: number, currentAngle: number): number {\n    if (y > y0 && x >= x0) {// II quarter\n        return 180 - currentAngle;\n    } else if (y > y0 && x < x0) {// III quarter\n        return 180 + currentAngle;\n    } else if (y < y0 && x < x0) {// IV quarter\n        return 360 - currentAngle;\n    } else {// I quarter\n        return currentAngle;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'ngx-material-timepicker-button',\n    templateUrl: './ngx-material-timepicker-button.component.html',\n    styleUrls: ['./ngx-material-timepicker-button.component.scss']\n})\nexport class NgxMaterialTimepickerButtonComponent {\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, TemplateRef } from '@angular/core';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { DateTime } from 'luxon';\nimport { disableHours, disableMinutes, getHours, getMinutes } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-dial',\n    templateUrl: 'ngx-material-timepicker-dial.component.html',\n    styleUrls: ['ngx-material-timepicker-dial.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxMaterialTimepickerDialComponent implements OnChanges {\n\n    timeUnit = TimeUnit;\n\n    hours: ClockFaceTime[];\n    minutes: ClockFaceTime[];\n\n    isHintVisible: boolean;\n\n    @Input() editableHintTmpl: TemplateRef<Node>;\n    @Input() hour: number | string;\n    @Input() minute: number | string;\n    @Input() format: number;\n    @Input() period: TimePeriod;\n    @Input() activeTimeUnit: TimeUnit;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() isEditable: boolean;\n    @Input() minutesGap: number;\n\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\n    @Output() hourChanged = new EventEmitter<ClockFaceTime>();\n    @Output() minuteChanged = new EventEmitter<ClockFaceTime>();\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue\n            || changes['format'] && changes['format'].currentValue) {\n            const hours = getHours(this.format);\n\n            this.hours = disableHours(hours, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n        if (changes['period'] && changes['period'].currentValue\n            || changes['hour'] && changes['hour'].currentValue) {\n            const minutes = getMinutes(this.minutesGap);\n\n            this.minutes = disableMinutes(minutes, +this.hour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n\n    changeTimeUnit(unit: TimeUnit): void {\n        this.timeUnitChanged.next(unit);\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.periodChanged.next(period);\n    }\n\n    changeHour(hour: ClockFaceTime): void {\n        this.hourChanged.next(hour);\n    }\n\n    changeMinute(minute: ClockFaceTime): void {\n        this.minuteChanged.next(minute);\n    }\n\n    showHint(): void {\n        this.isHintVisible = true;\n    }\n\n    hideHint(): void {\n        this.isHintVisible = false;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TimeUnit } from '../models/time-unit.enum';\nimport { DateTime } from 'luxon';\n\n@Pipe({\n    name: 'timeFormatter'\n})\nexport class TimeFormatterPipe implements PipeTransform {\n\n    transform(time: number, timeUnit: TimeUnit): any {\n        if (time === undefined) {\n            return time;\n        }\n        switch (timeUnit) {\n            case TimeUnit.HOUR:\n                return DateTime.fromObject({hour: time}).toFormat('HH');\n            case TimeUnit.MINUTE:\n                return DateTime.fromObject({minute: time}).toFormat('mm');\n            default:\n                throw new Error('no such time unit');\n        }\n    }\n\n}\n","/* tslint:disable:triple-equals */\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { TimeFormatterPipe } from '../../pipes/time-formatter.pipe';\nimport { isDigit } from '../../utils/timepicker.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-dial-control',\n    templateUrl: 'ngx-material-timepicker-dial-control.component.html',\n    styleUrls: ['ngx-material-timepicker-dial-control.component.scss']\n})\nexport class NgxMaterialTimepickerDialControlComponent implements OnChanges {\n\n    previousTime: number | string;\n\n    @Input() timeList: ClockFaceTime[];\n    @Input() timeUnit: TimeUnit;\n    @Input() time: string;\n    @Input() isActive: boolean;\n    @Input() isEditable: boolean;\n    @Input() minutesGap: number;\n\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\n    @Output() timeChanged = new EventEmitter<ClockFaceTime>();\n    @Output() focused = new EventEmitter<null>();\n    @Output() unfocused = new EventEmitter<null>();\n\n    private get selectedTime(): ClockFaceTime {\n        if (!!this.time) {\n            return this.timeList.find(t => t.time === +this.time);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['time'] && (changes['time'].currentValue !== undefined)) {\n            if (this.isEditable && !changes['time'].firstChange) {\n                return;\n            }\n            this.time = new TimeFormatterPipe().transform(+changes['time'].currentValue, this.timeUnit);\n        }\n    }\n\n    saveTimeAndChangeTimeUnit(event: FocusEvent, unit: TimeUnit): void {\n        event.preventDefault();\n        this.previousTime = this.time;\n        this.timeUnitChanged.next(unit);\n        this.focused.next();\n    }\n\n    updateTime(): void {\n        const time = this.selectedTime;\n        if (time) {\n            this.timeChanged.next(time);\n            this.previousTime = time.time;\n        }\n    }\n\n    formatTime(): void {\n        if (this.isEditable) {\n            const time = this.time || this.previousTime;\n            this.time = new TimeFormatterPipe().transform(+time, this.timeUnit);\n            this.unfocused.next();\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        const char = String.fromCharCode(e.keyCode);\n\n\n        if ((!isDigit(e)) || isTimeDisabledToChange(this.time, char, this.timeList)) {\n            e.preventDefault();\n        }\n\n        if (isDigit(e)) {\n            this.changeTimeByArrow(e.keyCode);\n        }\n    }\n\n    private changeTimeByArrow(keyCode: number): void {\n        const ARROW_UP = 38;\n        const ARROW_DOWN = 40;\n        let time: string;\n\n        if (keyCode === ARROW_UP) {\n            time = String(+this.time + (this.minutesGap || 1));\n        } else if (keyCode === ARROW_DOWN) {\n            time = String(+this.time - (this.minutesGap || 1));\n        }\n\n        if (!isTimeUnavailable(time, this.timeList)) {\n            this.time = time;\n            this.updateTime();\n        }\n    }\n\n}\n\n\nfunction isTimeDisabledToChange(currentTime: string, nextTime: string, timeList: ClockFaceTime[]): boolean {\n    const isNumber = /\\d/.test(nextTime);\n\n    if (isNumber) {\n        const time = currentTime + nextTime;\n        return isTimeUnavailable(time, timeList);\n    }\n}\n\nfunction isTimeUnavailable(time: string, timeList: ClockFaceTime[]): boolean {\n    const selectedTime = timeList.find(value => value.time === +time);\n    return !selectedTime || (selectedTime && selectedTime.disabled);\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { animate, sequence, style, transition, trigger } from '@angular/animations';\nimport { DateTime } from 'luxon';\nimport { disableHours, disableMinutes } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-period',\n    templateUrl: 'ngx-material-timepicker-period.component.html',\n    styleUrls: ['ngx-material-timepicker-period.component.scss'],\n    animations: [\n        trigger('scaleInOut', [\n            transition(':enter', [\n                style({transform: 'scale(0)'}),\n                animate('.2s', style({transform: 'scale(1)'})),\n                sequence([\n                    animate('3s', style({opacity: 1})),\n                    animate('.3s', style({opacity: 0}))\n                ])\n            ])\n        ])\n    ]\n})\nexport class NgxMaterialTimepickerPeriodComponent {\n\n    timePeriod = TimePeriod;\n    isPeriodAvailable = true;\n\n    @Input() selectedPeriod: TimePeriod;\n    @Input() format: number;\n    @Input() activeTimeUnit: TimeUnit;\n    @Input() hours: ClockFaceTime[];\n    @Input() minutes: ClockFaceTime[];\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() selectedHour: number | string;\n\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\n\n    changePeriod(period: TimePeriod): void {\n        this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\n        if (this.isPeriodAvailable) {\n            this.periodChanged.next(period);\n        }\n    }\n\n    animationDone(): void {\n        this.isPeriodAvailable = true;\n    }\n\n    private isSwitchPeriodAvailable(period: TimePeriod): boolean {\n        const time = this.getDisabledTimeByPeriod(period);\n        return !time.every(t => t.disabled);\n    }\n\n    private getDisabledTimeByPeriod(period: TimePeriod): ClockFaceTime[] {\n        switch (this.activeTimeUnit) {\n            case TimeUnit.HOUR:\n                return disableHours(this.hours, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            case TimeUnit.MINUTE:\n                return disableMinutes(this.minutes, +this.selectedHour, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            default:\n                throw new Error('no such TimeUnit');\n        }\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n    name: 'styleSanitizer'\n})\nexport class StyleSanitizerPipe implements PipeTransform {\n\n    constructor(private domSanitizer: DomSanitizer) {\n    }\n\n    transform(value: string): any {\n        if (!value) {\n            return value;\n        }\n        return this.domSanitizer.bypassSecurityTrustStyle(value);\n    }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport {NgxMaterialTimepickerEventService} from '../services/ngx-material-timepicker-event.service';\n\n@Directive({\n    selector: '[overlay]'\n})\nexport class OverlayDirective {\n\n    @Input('overlay') preventClick: boolean;\n\n    constructor(private eventService: NgxMaterialTimepickerEventService) {\n    }\n\n\n    @HostListener('click', ['$event'])\n    onClick(e: MouseEvent) {\n        if (!this.preventClick) {\n            this.eventService.dispatchEvent(e);\n        }\n        e.preventDefault();\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'minutesFormatter'\n})\nexport class MinutesFormatterPipe implements PipeTransform {\n\n    transform(minute: number, gap = 5): number | string {\n        if (!minute) {\n            return minute;\n        }\n\n        return minute % gap === 0 ? minute : '';\n    }\n\n}\n","import {Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, Optional} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n@Directive({\n    selector: '[timepickerAutofocus]'\n})\nexport class AutofocusDirective implements OnChanges, OnDestroy {\n\n    @Input('timepickerAutofocus') isFocusActive: boolean;\n\n    private activeElement: HTMLElement;\n\n    constructor(private element: ElementRef, @Optional() @Inject(DOCUMENT) private document: any) {\n        this.activeElement = this.document.activeElement;\n    }\n\n    ngOnChanges() {\n        if (this.isFocusActive) {\n            // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n            setTimeout(() => this.element.nativeElement.focus());\n        }\n    }\n\n    ngOnDestroy() {\n        // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n        setTimeout(() => this.activeElement.focus());\n    }\n}\n","import { Component, forwardRef, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgxMaterialTimepickerService } from '../../services/ngx-material-timepicker.service';\nimport { Observable, Subject } from 'rxjs';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { getHours, getMinutes } from '../../utils/timepicker-time.utils';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { NgxMaterialTimepickerTheme } from '../../models/ngx-material-timepicker-theme.interface';\nimport { takeUntil } from 'rxjs/operators';\nimport { TimeFormatterPipe } from '../../pipes/time-formatter.pipe';\n\n@Component({\n    selector: 'ngx-timepicker-field',\n    templateUrl: './ngx-timepicker-field.component.html',\n    styleUrls: ['./ngx-timepicker-field.component.scss'],\n    providers: [\n        NgxMaterialTimepickerService,\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxTimepickerFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxTimepickerFieldComponent implements OnInit, OnDestroy, ControlValueAccessor {\n\n    period$: Observable<TimePeriod>;\n\n    hour: number;\n    minute: number;\n\n    minHour = 1;\n    maxHour = 12;\n\n    timeUnit = TimeUnit;\n    timepickerTime: string;\n\n    @Input() disabled: boolean;\n    @Input() toggleIcon: TemplateRef<HTMLObjectElement>;\n    @Input() buttonAlign: 'right' | 'left' = 'right';\n    @Input() clockTheme: NgxMaterialTimepickerTheme;\n    @Input() controlOnly: boolean;\n\n    @Input()\n    set format(value: number) {\n        this._format = value === 24 ? 24 : 12;\n        this.minHour = this._format === 12 ? 1 : 0;\n        this.maxHour = this._format === 12 ? 12 : 23;\n    }\n\n    get format(): number {\n        return this._format;\n    }\n\n\n    @Input()\n    set defaultTime(val: string) {\n        this.timepickerService.setDefaultTimeIfAvailable(val, null, null, this._format);\n        this._defaultTime = val;\n        this.timepickerTime = val;\n    }\n\n    get defaultTime(): string {\n        return this._defaultTime;\n    }\n\n    private _defaultTime: string;\n    private _format = 12;\n\n    private hoursList: ClockFaceTime[];\n    private minutesList: ClockFaceTime[];\n\n    private unsubscribe$ = new Subject();\n\n    private onChange: (value: string) => void = () => {\n    }\n\n    constructor(private timepickerService: NgxMaterialTimepickerService) {\n    }\n\n    ngOnInit() {\n        this.period$ = this.timepickerService.selectedPeriod;\n\n        this.timepickerService.selectedHour.pipe(takeUntil(this.unsubscribe$))\n            .subscribe(hour => this.hour = hour.time);\n\n        this.timepickerService.selectedMinute.pipe(takeUntil(this.unsubscribe$))\n            .subscribe(minute => this.minute = minute.time);\n\n        this.hoursList = getHours(this._format);\n        this.minutesList = getMinutes();\n    }\n\n    writeValue(val: string): void {\n        if (val) {\n            this.defaultTime = val;\n        }\n    }\n\n    registerOnTouched(fn: any): void {\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    changeHour(hour: number): void {\n        this.timepickerService.hour = this.hoursList.find(h => h.time === hour);\n        this.changeTime();\n    }\n\n    changeMinute(minute: number): void {\n        this.timepickerService.minute = this.minutesList.find(m => m.time === minute);\n        this.changeTime();\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.timepickerService.period = period;\n        this.changeTime();\n    }\n\n    onTimeSet(time: string): void {\n        this.defaultTime = time;\n        this.onChange(time);\n        this.formatTime();\n    }\n\n    ngOnDestroy(): void {\n        this.unsubscribe$.next();\n    }\n\n    private changeTime(): void {\n        const time = this.timepickerService.getFullTime(this._format);\n        this.timepickerTime = time;\n        this.onChange(time);\n    }\n\n    private formatTime(): void {\n        this.hour = new TimeFormatterPipe().transform(this.hour, TimeUnit.HOUR);\n        this.minute = new TimeFormatterPipe().transform(this.minute, TimeUnit.MINUTE);\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { isDigit } from '../../../utils/timepicker.utils';\nimport { TimeFormatterPipe } from '../../../pipes/time-formatter.pipe';\nimport { TimeUnit } from '../../../models/time-unit.enum';\n\n@Component({\n    selector: 'ngx-timepicker-time-control',\n    templateUrl: './ngx-timepicker-time-control.component.html',\n    styleUrls: ['./ngx-timepicker-time-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NgxTimepickerTimeControlComponent implements OnInit {\n\n    @Input() time: number;\n    @Input() min: number;\n    @Input() max: number;\n    @Input() placeholder: string;\n    @Input() timeUnit: TimeUnit;\n    @Input() disabled: boolean;\n\n    @Output() timeChanged = new EventEmitter<number>();\n\n    isFocused: boolean;\n\n    ngOnInit(): void {\n        this.time = new TimeFormatterPipe().transform(this.time, this.timeUnit);\n    }\n\n    onKeydown(event: KeyboardEvent): void {\n        if (!isDigit(event)) {\n            event.preventDefault();\n        }\n\n        switch (event.key) {\n            case 'ArrowUp':\n                this.increase();\n                break;\n            case 'ArrowDown':\n                this.decrease();\n                break;\n        }\n    }\n\n    increase(): void {\n        if (!this.disabled) {\n            let nextTime = +this.time + 1;\n\n            if (nextTime > this.max) {\n                nextTime = this.min;\n            }\n\n            this.timeChanged.emit(nextTime);\n        }\n    }\n\n    decrease(): void {\n        if (!this.disabled) {\n            let previousTime = +this.time - 1;\n\n            if (previousTime < this.min) {\n                previousTime = this.max;\n            }\n\n            this.timeChanged.emit(previousTime);\n        }\n    }\n\n    onInput(input: HTMLInputElement) {\n        const value = parseInt(input.value, 10);\n\n        if (!isNaN(value)) {\n            this.time = value;\n\n            if (this.time > this.max) {\n                this.time = +String(value)[0];\n            }\n\n            if (this.time < this.min) {\n                this.time = this.min;\n            }\n\n            input.value = String(this.time);\n            this.timeChanged.emit(this.time);\n        }\n\n    }\n\n    onFocus(): void {\n        this.isFocused = true;\n    }\n\n    onBlur(): void {\n        this.time = new TimeFormatterPipe().transform(this.time, this.timeUnit);\n        this.isFocused = false;\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TimePeriod } from '../../../models/time-period.enum';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n    selector: 'ngx-timepicker-period-selector',\n    templateUrl: 'ngx-timepicker-period-selector.component.html',\n    styleUrls: ['./ngx-timepicker-period-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('scaleInOut', [\n            transition(':enter', [\n                style({transform: 'scale(0)', opacity: 0}),\n                animate(200, style({transform: 'scale(1)', opacity: 1}))\n            ]),\n            transition(':leave', [\n                animate(200, style({transform: 'scale(0)', opacity: 0}))\n            ])\n        ])\n    ]\n})\n\nexport class NgxTimepickerPeriodSelectorComponent {\n\n    @Input() selectedPeriod: TimePeriod;\n    @Input() isOpened: boolean;\n    @Input() disabled: boolean;\n\n    @Output() periodSelected = new EventEmitter<TimePeriod>();\n\n    period = TimePeriod;\n\n    open(): void {\n        if (!this.disabled) {\n            this.isOpened = true;\n        }\n    }\n\n    select(period: TimePeriod): void {\n        this.periodSelected.next(period);\n        this.isOpened = false;\n    }\n\n    backdropClick(): void {\n        this.isOpened = false;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxMaterialTimepickerComponent } from './ngx-material-timepicker.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxMaterialTimepickerToggleComponent } from './components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\nimport { NgxMaterialTimepickerToggleIconDirective } from './directives/ngx-material-timepicker-toggle-icon.directive';\nimport { NgxMaterialTimepickerThemeDirective } from './directives/ngx-material-timepicker-theme.directive';\nimport {\n    NgxMaterialTimepicker24HoursFaceComponent\n} from './components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component';\nimport {\n    NgxMaterialTimepicker12HoursFaceComponent\n} from './components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component';\nimport {\n    NgxMaterialTimepickerMinutesFaceComponent } from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';\nimport { NgxMaterialTimepickerFaceComponent } from './components/timepicker-face/ngx-material-timepicker-face.component';\nimport { NgxMaterialTimepickerButtonComponent } from './components/timepicker-button/ngx-material-timepicker-button.component';\nimport { NgxMaterialTimepickerDialComponent } from './components/timepicker-dial/ngx-material-timepicker-dial.component';\nimport {\n    NgxMaterialTimepickerDialControlComponent } from './components/timepicker-dial-control/ngx-material-timepicker-dial-control.component';\nimport { NgxMaterialTimepickerPeriodComponent } from './components/timepicker-period/ngx-material-timepicker-period.component';\nimport { StyleSanitizerPipe } from './pipes/style-sanitizer.pipe';\nimport { TimeFormatterPipe } from './pipes/time-formatter.pipe';\nimport { OverlayDirective } from './directives/overlay.directive';\nimport { MinutesFormatterPipe } from './pipes/minutes-formatter.pipe';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { NgxTimepickerFieldComponent } from './components/timepicker-field/ngx-timepicker-field.component';\nimport {\n    NgxTimepickerTimeControlComponent } from './components/timepicker-field/timepicker-time-control/ngx-timepicker-time-control.component';\nimport {\n    NgxTimepickerPeriodSelectorComponent\n} from './components/timepicker-field/timepicker-period-selector/ngx-timepicker-period-selector.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [\n        NgxMaterialTimepickerComponent,\n        NgxMaterialTimepickerToggleComponent,\n        NgxTimepickerFieldComponent,\n        TimepickerDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        NgxMaterialTimepickerThemeDirective\n    ],\n    declarations: [\n        NgxMaterialTimepickerComponent,\n        NgxMaterialTimepicker24HoursFaceComponent,\n        NgxMaterialTimepicker12HoursFaceComponent,\n        NgxMaterialTimepickerMinutesFaceComponent,\n        NgxMaterialTimepickerFaceComponent,\n        NgxMaterialTimepickerToggleComponent,\n        NgxMaterialTimepickerButtonComponent,\n        NgxMaterialTimepickerDialComponent,\n        NgxMaterialTimepickerDialControlComponent,\n        NgxMaterialTimepickerPeriodComponent,\n        StyleSanitizerPipe,\n        TimeFormatterPipe,\n        TimepickerDirective,\n        OverlayDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        AutofocusDirective,\n        MinutesFormatterPipe,\n        NgxMaterialTimepickerThemeDirective,\n        NgxTimepickerFieldComponent,\n        NgxTimepickerTimeControlComponent,\n        NgxTimepickerPeriodSelectorComponent\n    ]\n})\nexport class NgxMaterialTimepickerModule {\n}\n"]}